body {
    background-color: #f2f2f2;
}
.container {
    margin: 0px !important;
    padding: 0px !important;
}

/**
    navigation menu style
**/
.main-nav{
    overflow: hidden;
    background-color: #333;
    position: fixed;
    width: 100%;
    left:0px;
    top:0px;    
}

.main-nav a {
    float: left;
    display: block;
    color: #f2f2f2;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
}

.active {
    background-color: #4CAF50;
    color: white;
}

.main-nav a:hover {
    background-color: #ddd;
    color: black;
}
.main-nav .bar {
    display: none;
}
/** footer style **/
.footer {
    background-color: #191919;
    width: 100%;
    padding: 0px;
    text-align: center;
    color: white;
    font-size: 1.3rem;
    margin-top: 50px;
    position: fixed;
    bottom: -1px;
    left: 0px;
}

/** home header section style **/
.header {
    margin-top: 25px;
    text-align: center;
    font-size: 1.1rem;
}

/*parallax scrolling effect */
.wrapper2 {
    /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
    height: 100vh;
    /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
    overflow-x: hidden;
    /* Enable scrolling on the page. */
    overflow-y: auto;
    /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
    perspective: 3px;
}

.p {
    /* Needed for children to be absolutely positioned relative to the parent. */
    position: relative;
    /* The height of the container. Must be set, but it doesn't really matter what the value is. */
    height: 100vh;

    /* For text formatting. */
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-shadow: 0 0 5px #000;
}

.parallax::after {
    /* Display and position the pseudo-element */
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
    transform: translateZ(-1px) scale(1.5);
    /* Force the background image to fill the whole element. */
    background-size: 100%;
    /* Keep the image from overlapping sibling elements. */
    z-index: -1;
}

/* The styling for the static div. */
.static {
    background:#7F7FFF;
}

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
    background-image: url('/imgs/coffee1.jpeg');
}

.bg2::after {
    background-image: url('/imgs/progr.png');
}

/** about section style **/
.about {
    text-align: center;
}
.wrapper {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 10px;
    grid-auto-rows: minmax(50px, auto);
}
/* .item-1 {
    grid-column: 2;
    grid-row: 1;
} */

/* 
flip card about page images
*/ 

/* test */
.test {
    background-color: #4CAF50;
}

/* Weather page styles */
.icon {
    width: 35%;
}
.weatherCard {
    margin-left:50px;
    text-align: center;
    /* Add shadows to create the "card" effect */
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    transition: 0.3s;
    width: 50%;
}

/* On mouse-over, add a deeper shadow */
.weatherCard:hover {
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
}

/* Add some padding inside the card container */
.t {
    box-sizing: border-box; 
}

/* Google Map */
#map {
    height: 400px;
    width: 50%;
}
/* js class */
.object {
    list-style-type: none;
    padding: 0px;
    margin-left:0px;
}
/*
* tv shows page style
*/
#search-show1{
    border-left: 6px solid green;
    padding: 20px;
    width: 35%;
    font-size: 1rem;
}
.style {
    margin-top: 50px;
    text-align: center;
}
.output {
    list-style-type: none;
}
.tv-shows{
    
    margin-bottom: 15px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size: 1.2rem;
}
/** Media queries **/
/* navigation responsiveness*/
@media screen and (max-width: 600px) {
    .main-nav a:not(:first-child) {
        display: none;
    }

    .main-nav a.bar {
        float: right;
        display: block;
    }
}

@media screen and (max-width: 600px) {
    .main-nav.responsive {
        position: relative;
    }

    .main-nav.responsive .bar {
        position: absolute;
        right: 0;
        top: 0;
    }

    .main-nav.responsive a {
        float: none;
        display: block;
        text-align: left;
    }
}